<!DOCTYPE html>
<html lang="zh-TW">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>出勤紀錄</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>
    <!--導航列-->
     {% include "nav.inc.twig" %}
    <!--內容區塊-->
    <main class="container-fluid mt-4">
        <!--分成左右2邊的佈區-->
        <div class="row">
            <div class="col-md-2">
                <!--左側選單列-->
                 {% include "menu.inc.twig" %}
            </div>
            <div class="col-md-10">
                {% block content %}
                <h3>出缺勤總覽</h3>
                <div class="row row-cols-1 row-cols-md-3">
                    <div class="col">
                        <div class="card shadow-sm">
                            <div class="card-body">
                                <h6>總課程時數</h6>
                                <div id="classhours" class="card-title-number text-primary">---</div>
                                <h6>總課程數</h6>
                                <div id="class" class="card-title-number text-primary">---</div>
                                <h6>總天數</h6>
                                <div id="days" class="card-title-number text-primary">---</div>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="card shadow-sm">
                            <div class="card-body">
                                <h6>總出席率數</h6>
                                <div id="attendancerate" class="card-title-number text-primary">---</div>
                                <h6>總遲到率</h6>
                                <div id="laterate" class="card-title-number text-primary">---</div>
                                <h6>總早退率</h6>
                                <div id="leave_earlyrate" class="card-title-number text-primary">---</div>
                                <h6>平均到校時數</h6>
                                <div id="inschoolavrage" class="card-title-number text-primary">---</div>
                            </div>
                        </div>
                    </div>
                </div>
                <!--課程時數柱狀圖-->
                <div class="row row-cols-1 row-cols-md-1">
                    <div class="p-5">
                        <h1>課程時數柱狀圖</h1>
                        <canvas id="courseChart" width="800" height="400"></canvas>
                    </div>
                </div>
            {% endblock %}
            </div>
        </div>

    </main>
    
    {% include "footer.inc.twig" %}
    
    <!-- 載入Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- 載入 Chart.js Data Labels 插件（如果想顯示標籤） -->
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
    {% block scripts %}
<script>
let myChart = null;
function updateChart(data) {
    const ctx = document.getElementById('courseChart').getContext('2d');

    if (myChart) {
        myChart.destroy();
    }
// updataChart()是用來重製圖表的

    const labels = data.map(item => item.class_name);
    const totalHours = data.map(item => parseInt(item.total_class_hours));
    const completionRates = data.map(item => parseFloat(item.completion_rate_pct));
    const completedHours = totalHours.map((hours, i) => hours * (completionRates[i] / 100));
    const remainingHours = totalHours.map((hours, i) => hours - completedHours[i]);

    myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [
                {
                    label: '已完成時數',
                    data: completedHours,
                    backgroundColor: 'rgba(54, 162, 235, 0.8)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1,
                },
                {
                    label: '未完成時數',
                    data: remainingHours,
                    backgroundColor: 'rgba(201, 203, 207, 0.6)',
                    borderColor: 'rgba(201, 203, 207, 1)',
                    borderWidth: 1,
                }
            ]
        },
        options: {
            indexAxis: 'y',
            responsive: true,
            scales: {
                x: {
                    stacked: true,
                    beginAtZero: true,
                    title: { display: true, text: '時數 (小時)' }
                },
                y: {
                    stacked: true,
                    title: { display: true, text: '課程名稱' }
                }
            },
            interaction: {
                mode: 'nearest',
                axis: 'y',
                intersect: false
            },
            plugins: {
                tooltip: {
                    mode: 'index',
                    intersect: false
                },
                legend: {
                    position: 'top'
                }
            }
        }
    });
}

// ✅ 當 DOM 載入後
document.addEventListener('DOMContentLoaded', function () {
    const classhours = document.getElementById("classhours");
    const classEl = document.getElementById("class");
    const days = document.getElementById("days");
    const attendancerate = document.getElementById("attendancerate");
    const laterate = document.getElementById("laterate");
    const leave_earlyrate = document.getElementById("leave_earlyrate");
    const inschoolavrage = document.getElementById("inschoolavrage");

    // 先抓學生選擇器的預設值（第一次載入時選定第一位）
    const studentSelect = document.getElementById('studentSelect');

    // ✅ 初始化選單
    fetch('student.php')
        .then(res => res.json())
        .then(studentList => {
            studentSelect.innerHTML = '<option selected disabled>選取學生</option>';
            studentList.forEach(student => {
                const option = document.createElement('option');
                option.value = student.name;
                option.textContent = student.name;
                studentSelect.appendChild(option);
            });
        });

    // ✅ 點選搜尋按鈕
    document.getElementById('searchBtn').addEventListener('click', function () {
        const studentname = studentSelect.value;
        if (!studentname) {
            alert('請選取學生');
            return;
        }

        // 彙總統計數據
        fetch('sumdataforchart.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name: studentname })
        })
            .then(res => res.json())
            .then(data => {
                if (!data || Object.keys(data).length === 0 || data.error) {
                    alert('查無該學生的統計資料');
                    return;
                }
                //console.log('真正的資料:',  data);

                classhours.innerHTML = `${parseFloat( data.class_hours).toFixed(2)} 小時`;
                classEl.innerHTML = `${parseFloat( data.attended_hours).toFixed(2)} 小時`;
                days.innerHTML = `${ data.days} 天`;

                const attendanceratenum = parseInt((parseFloat( data.attended_hours) / parseFloat( data.class_hours)) * 100);
                attendancerate.innerHTML = `${attendanceratenum}%`;

                const lateratecal = (parseFloat( data.late_hours) / parseFloat( data.class_hours)) * 100;
                laterate.innerHTML = `${lateratecal.toFixed(2)}%`;

                const leave_earlyratecal = (parseFloat( data.leave_early_hours) / parseFloat( data.class_hours)) * 100;
                leave_earlyrate.innerHTML = `${leave_earlyratecal.toFixed(2)}%`;

                const inschoolavragecal = parseFloat(parseInt( data.raw_hours) / parseInt( data.days));
                inschoolavrage.innerHTML = `${inschoolavragecal.toFixed(2)} 小時`;
                
            });

        // 圖表資料
        fetch('sumclassdata.php', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ name: studentname })
        })
            .then(res => res.json())
            .then(data => {
                console.log("資料內容：", data);
                updateChart(data);
            })
            .catch(err => {
                console.error('取得圖表資料錯誤:', err);
            });
    });
});
</script>


    {% endblock %}
</body>

</html>