{% extends "dashboard.inc.twig" %}
{% block menu %}
	<div class="list-group">
        <a href="admin_dashboard.php" class="list-group-item active">首頁</a>
        <a href="admin_dashboard.php?mode=inoutlist&name=Aaron&date=2025-04-15" class="list-group-item">打卡記錄列表</a>
        <a href="admin_dashboard.php?mode=createuser" class="list-group-item">創建使用者</a>
    </div>
{% endblock %}
{% block scripts %}
<script>
let myChart = null;
let myChart2 = null;

function updateChart(data) {
    const ctx = document.getElementById('courseChart').getContext('2d');
    if (myChart) {
        myChart.destroy();
    }

    const labels = data.map(item => item.class_name);
    const totalHours = data.map(item => parseInt(item.total_class_hours));
    const completionRates = data.map(item => parseFloat(item.completion_rate_pct));
    const completedHours = totalHours.map((hours, i) => hours * (completionRates[i] / 100));
    const remainingHours = totalHours.map((hours, i) => hours - completedHours[i]);

    myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [
                {
                    label: '已完成時數',
                    data: completedHours,
                    backgroundColor: 'rgba(54, 162, 235, 0.8)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1,
                },
                {
                    label: '未完成時數',
                    data: remainingHours,
                    backgroundColor: 'rgba(201, 203, 207, 0.6)',
                    borderColor: 'rgba(201, 203, 207, 1)',
                    borderWidth: 1,
                }
            ]
        },
        options: {
            indexAxis: 'y',
            responsive: true,
            scales: {
                x: {
                    stacked: true,
                    beginAtZero: true,
                    title: { display: true, text: '時數 (小時)' }
                },
                y: {
                    stacked: true,
                    title: { display: true, text: '課程名稱' }
                }
            },
            interaction: {
                mode: 'nearest',
                axis: 'y',
                intersect: false
            },
            plugins: {
                tooltip: {
                    mode: 'index',
                    intersect: false
                },
                legend: {
                    position: 'top'
                }
            }
        }
    });
}

document.addEventListener('DOMContentLoaded', function () {
    const classhours = document.getElementById("classhours");
    const classEl = document.getElementById("class");
    const days = document.getElementById("days");
    const attendancerate = document.getElementById("attendancerate");
    const laterate = document.getElementById("laterate");
    const leave_earlyrate = document.getElementById("leave_earlyrate");
    const inschoolavrage = document.getElementById("inschoolavrage");
    const studentSelect = document.getElementById('studentSelect');

    // 初始化學生選單
    fetch('student.php')
        .then(res => res.json())
        .then(studentList => {
            studentSelect.innerHTML = '<option selected disabled>選取學生</option>';
            studentList.forEach(student => {
                const option = document.createElement('option');
                option.value = student.name;
                option.textContent = student.name;
                studentSelect.appendChild(option);
            });
        });

    // 搜尋按鈕事件
    document.getElementById('searchBtn').addEventListener('click', function () {
        const studentname = studentSelect.value;
        if (!studentname) {
            alert('請選取學生');
            return;
        }

        // 取得統計數據
        fetch('sumdataforchart.php', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({ name: studentname })
        })
        .then(res => res.json())
        .then(data => {
            if (!data || Object.keys(data).length === 0 || data.error) {
                alert('查無該學生的統計資料');
                return;
            }

            classhours.innerHTML = `${parseFloat(data.class_hours).toFixed(2)} 小時`;
            classEl.innerHTML = `${parseFloat(data.attended_hours).toFixed(2)} 小時`;
            days.innerHTML = `${data.days} 天`;

            const attendanceratenum = parseInt((parseFloat(data.attended_hours) / parseFloat(data.class_hours)) * 100);
            attendancerate.innerHTML = `${attendanceratenum}%`;

            const lateratecal = (parseFloat(data.late_hours) / parseFloat(data.class_hours)) * 100;
            laterate.innerHTML = `${lateratecal.toFixed(2)}%`;

            const leave_earlyratecal = (parseFloat(data.leave_early_hours) / parseFloat(data.class_hours)) * 100;
            leave_earlyrate.innerHTML = `${leave_earlyratecal.toFixed(2)}%`;

            const inschoolavragecal = parseFloat(parseInt(data.raw_hours) / parseInt(data.days));
            inschoolavrage.innerHTML = `${inschoolavragecal.toFixed(2)} 小時`;

            // 定義 ctx2
            const ctx2 = document.getElementById('myAttenChart').getContext('2d');

            // 顯示圓餅圖
            if (myChart2) {
                myChart2.destroy();
            }
            myChart2 = new Chart(ctx2, {
                type: 'pie',
                data: {
                    labels: ['出席', '缺席'],
                    datasets: [{
                        label: '出缺席',
                        data: [
                            parseFloat(data.attended_hours).toFixed(2),
                            parseFloat(data.absent_hours).toFixed(2)
                        ],
                        backgroundColor: [
                            'rgba(75, 192, 192, 0.6)',
                            'rgba(255, 99, 132, 0.6)'
                        ],
                        borderWidth: 0
                    }]
                }
            });
        });

        // 取得課程資料並更新長條圖
        fetch('sumclassdata.php', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({ name: studentname })
        })
        .then(res => res.json())
        .then(data => {
            updateChart(data);
        })
        .catch(err => {
            console.error('取得圖表資料錯誤:', err);
        });
    });
});
</script>


    <script>// 每日上課時間折線圖
        const ctx_ct = document.getElementById('myclasstimeChart');
        const ctx_at = document.getElementById('myattentimeChart');
        let mylinechart;
        async function linechart() {
            try {
                const response = await fetch('hoursline.json');
                if (!response.ok) {
                    throw new Error(response.status);
                }
                const res = await response.json();
                console.log(typeof (res));
                console.log(res);
                const classdate = res.map(item => item.class_date);
                const classhours = res.map(item => item.class_hours);
                const attenhours = res.map(item => item.raw_hours);

                mylinechart = new Chart(ctx_ct, {
                    type: 'line',
                    data: {
                        labels: classdate,
                        datasets: [{
                            label: '每日上課時間',
                            data: classhours,
                            backgroundColor: [
                                'rgba(75, 192, 192, 0.6)', // 綠色
                            ],
                            borderColor: 'rgba(75, 192, 192, 0.6)'
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true // Y 軸從 0 開始
                            }
                        }
                    }
                });
            // 每日在校時間折線圖
                new Chart(ctx_at, {
                    type: 'line',
                    data: {
                        labels: classdate,
                        datasets: [{
                            label: '每日在校時間折線圖',
                            data: attenhours,
                            backgroundColor: [
                                'rgba(75, 192, 192, 0.6)', // 綠色
                            ],
                            borderColor: 'rgba(75, 192, 192, 0.6)'
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true // Y 軸從 0 開始
                            }
                        }
                    }
                });
            } catch (error) {
                console.error(error);
            }

        }

        

        window.onload = linechart;
    </script>
{% endblock %}
